{"version":3,"sources":["logo.svg","ResumeDrop.js","Applicant.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ResumeDrop","onDrop","acceptedFiles","rejectedFiles","react_default","a","createElement","es","this","_ref","getRootProps","getInputProps","isDragActive","Object","assign","className","classNames","dropzone--isActive","React","Component","options","key","text","value","Hiring","state","handleChange","e","_this","setState","Form","Group","widths","Input","fluid","label","placeholder","Select","src_ResumeDrop","TextArea","Checkbox","Button","App","BrowserRouter","Route","exact","path","component","Applicant","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6JAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+RCkCzBC,6MA7BbC,OAAS,SAACC,EAAeC,6EAKvB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUN,OAAQO,KAAKP,QACpB,SAAAQ,GAAmD,IAAhDC,EAAgDD,EAAhDC,aAAcC,EAAkCF,EAAlCE,cAAeC,EAAmBH,EAAnBG,aAC/B,OACER,EAAAC,EAAAC,cAAA,MAAAO,OAAAC,OAAA,GACMJ,IADN,CAEEK,UAAWC,IAAW,WAAY,CAChCC,qBAAsBL,MAGxBR,EAAAC,EAAAC,cAAA,QAAWK,KACVC,EACCR,EAAAC,EAAAC,cAAA,+BAEAF,EAAAC,EAAAC,cAAA,8DApBSY,IAAMC,WCEzBC,EAAU,CACd,CAAEC,IAAK,IAAKC,KAAM,OAAQC,MAAO,QACjC,CAAEF,IAAK,IAAKC,KAAM,SAAUC,MAAO,UACnC,CAAEF,IAAK,KAAMC,KAAM,iBAAkBC,MAAO,mBAyD/BC,6MArDbC,MAAQ,KAERC,aAAe,SAACC,EAADlB,GAAA,IAAMc,EAANd,EAAMc,MAAN,OAAkBK,EAAKC,SAAS,CAAEN,mFAG7Bf,KAAKiB,MAAfF,MACR,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMf,UAAU,iBACdX,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,OAAO,QAAQjB,UAAU,cACnCX,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,aAAaC,YAAY,eACjDhC,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,YAAYC,YAAY,cAEhDhC,EAAAC,EAAAC,cAACwB,EAAA,EAAKO,OAAN,CACEH,OAAK,EACLC,MAAM,SACNf,QAASA,EACTgB,YAAY,WAEdhC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,OAAO,QAAQjB,UAAU,cACnCX,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,QAAQC,YAAY,iBAC5ChC,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,YAAYC,YAAY,eAElDhC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iBACbX,EAAAC,EAAAC,cAACgC,EAAD,OAEFlC,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,OAAO,QAAQjB,UAAU,cACnCX,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,eAAeC,YAAY,iBACnDhC,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,SAASC,YAAY,WAC7ChC,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,eAAeC,YAAY,kBAGrDhC,EAAAC,EAAAC,cAACwB,EAAA,EAAKS,SAAN,CACEJ,MAAM,0BACNC,YAAY,4BACZrB,UAAU,eAGZX,EAAAC,EAAAC,cAACwB,EAAA,EAAKC,MAAN,CAAYC,OAAO,QAAQjB,UAAU,cACnCX,EAAAC,EAAAC,cAACwB,EAAA,EAAKG,MAAN,CAAYC,OAAK,EAACC,MAAM,SAASC,YAAY,WAE/ChC,EAAAC,EAAAC,cAACwB,EAAA,EAAKU,SAAN,CAAeL,MAAM,wCACrB/B,EAAAC,EAAAC,cAACwB,EAAA,EAAKW,OAAN,CAAa1B,UAAU,gBAAvB,mBA/CWI,+BCSNuB,mLAXX,OACEtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACEvC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC5C,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWvB,eANzBL,aCIE8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e16a296b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport Dropzone from \"react-dropzone\";\n\nclass ResumeDrop extends React.Component {\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    // Do something with files\n  };\n\n  render() {\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({ getRootProps, getInputProps, isDragActive }) => {\n          return (\n            <div\n              {...getRootProps()}\n              className={classNames(\"dropzone\", {\n                \"dropzone--isActive\": isDragActive\n              })}\n            >\n              <input {...getInputProps()} />\n              {isDragActive ? (\n                <p>Drop files here...</p>\n              ) : (\n                <p>Click or Drag and drop your resume here</p>\n              )}\n            </div>\n          );\n        }}\n      </Dropzone>\n    );\n  }\n}\n\nexport default ResumeDrop;\n","import React, { Component } from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport Dropzone from \"react-dropzone\";\nimport \"./style.css\";\nimport ResumeDrop from \"./ResumeDrop\";\n\nconst options = [\n  { key: \"m\", text: \"Male\", value: \"male\" },\n  { key: \"f\", text: \"Female\", value: \"female\" },\n  { key: \"nb\", text: \"Decline to say\", value: \"Decline to say\" }\n];\n\nclass Hiring extends Component {\n  state = {};\n\n  handleChange = (e, { value }) => this.setState({ value });\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div>\n        <Form className=\"formContainer\">\n          <Form.Group widths=\"equal\" className=\"formMargin\">\n            <Form.Input fluid label=\"First name\" placeholder=\"First name\" />\n            <Form.Input fluid label=\"Last name\" placeholder=\"Last name\" />\n\n            <Form.Select\n              fluid\n              label=\"Gender\"\n              options={options}\n              placeholder=\"Gender\"\n            />\n            <br />\n            <br />\n          </Form.Group>\n          <Form.Group widths=\"equal\" className=\"formMargin\">\n            <Form.Input fluid label=\"Phone\" placeholder=\"Phone number\" />\n            <Form.Input fluid label=\"Education\" placeholder=\"Education\" />\n          </Form.Group>\n          <div className=\"dropContainer\">\n            <ResumeDrop />\n          </div>\n          <h2>Experience</h2>\n          <Form.Group widths=\"equal\" className=\"formMargin\">\n            <Form.Input fluid label=\"Company name\" placeholder=\"company name\" />\n            <Form.Input fluid label=\"Length\" placeholder=\"Length\" />\n            <Form.Input fluid label=\"Job position\" placeholder=\"Job position\" />\n          </Form.Group>\n\n          <Form.TextArea\n            label=\"Optional (Cover Letter)\"\n            placeholder=\"Tell us more about you...\"\n            className=\"formMargin\"\n          />\n\n          <Form.Group widths=\"equal\" className=\"formMargin\">\n            <Form.Input fluid label=\"Skills\" placeholder=\"Skill\" />\n          </Form.Group>\n          <Form.Checkbox label=\"I agree to the Terms and Conditions\" />\n          <Form.Button className=\"submitButton\">Submit</Form.Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Hiring;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Applicant from \"./Applicant\";\nimport Hiring from \"./Hiring\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Applicant} />\n          <Route path=\"/Hiring\" component={Hiring} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}